1
00:00:00,780 --> 00:00:06,090
嗯嗯嗯嗯嗯

2
00:00:11,580 --> 00:00:16,890
好，那个今天由我给大家介绍一下它的一笔所谓的先行条件，极大的，这些相关的

3
00:00:16,895 --> 00:00:22,080
原理我叫于帅鹏，我是这个萍，看他弟弟架构组的研发组长

4
00:00:22,085 --> 00:00:25,740
本科的这个概念主要是第一次科学背景摄像

5
00:00:25,860 --> 00:00:31,140
帮助大家分析一下，它就彼此而本身的一些性的问题，使用者需要具备一些常规的技能

6
00:00:31,650 --> 00:00:36,960
学习目标是了解他的第三位性能相关的原理，然后并且学会平衡分析这个形成平

7
00:00:36,965 --> 00:00:37,560
环境

8
00:00:38,580 --> 00:00:42,600
主要是面向就是说我们零基础的这些学员

9
00:00:43,020 --> 00:00:46,470
然后就是点大刚，现在我画了四个

10
00:00:46,680 --> 00:00:51,990
部分第一是性能相关的基本原理，第二是监控线的介绍，第三是外卖

11
00:00:51,995 --> 00:00:54,840
社介绍，第40性能参数调优

12
00:00:55,440 --> 00:01:00,450
基本国际就是第一部分，先介绍我们这个他一个色的一些性格的基本原理

13
00:01:00,660 --> 00:01:01,590
然后呢？

14
00:01:01,740 --> 00:01:07,050
这就是介绍这个可能是我们从这个监控上，或者是从慢人质这个

15
00:01:07,055 --> 00:01:10,110
两个角度看，怎么发现这个性格的问题？

16
00:01:10,410 --> 00:01:15,720
翻新的问题之后，第三，第四部最后一部分就是介绍这个怎么进行33条调优？然后把

17
00:01:15,725 --> 00:01:17,040
这个行，能调上去

18
00:01:19,350 --> 00:01:23,820
下面开始第一部分，这个性能相关的原理基本介绍，然后

19
00:01:24,030 --> 00:01:29,340
首先看一下这个特异b的整体架构啊就是说嗯嗯，本节课讲的

20
00:01:29,345 --> 00:01:32,130
他利弊，所以他就是这部分指的是这个

21
00:01:32,220 --> 00:01:33,240
呃

22
00:01:33,300 --> 00:01:38,610
左下这边儿这个绿色部分就是她第三位，这部分是整个这个特别整体架构的

23
00:01:38,615 --> 00:01:39,480
一部分

24
00:01:39,990 --> 00:01:44,130
就是相对于其他的这个sky还有右边这些台词八个都不是本

25
00:01:44,135 --> 00:01:45,540
节课重点介绍内容

26
00:01:47,550 --> 00:01:52,860
他的玉本身自己是这个性能相关的使用的资源主要是用这个CPU内

27
00:01:52,865 --> 00:01:55,170
内存还有网络，还有所这四个点

28
00:01:55,440 --> 00:02:00,750
因为本身泰迪币是一个无状态的架构，而且他本身并不怎么需要写这个磁盘

29
00:02:00,930 --> 00:02:05,940
只有这个系统日志会写反，所以说这个跟IO这个没有什么关系

30
00:02:07,650 --> 00:02:11,220
恶心，就好像这个资源不先看一下CPU

31
00:02:11,370 --> 00:02:12,150
这意思

32
00:02:12,270 --> 00:02:13,110
这么吃

33
00:02:13,380 --> 00:02:18,690
遂平平台公司为主要消耗的资源，就是说从这个右边这样的不可以看到

34
00:02:18,780 --> 00:02:20,400
呃，一条蛇口走

35
00:02:20,460 --> 00:02:22,050
走过来就被一个全过程

36
00:02:22,140 --> 00:02:24,690
从搜索进来之后，先被解一枪ST

37
00:02:24,840 --> 00:02:29,160
就是称为法术，然后呢？我们在进行国际化，然后物流化

38
00:02:29,430 --> 00:02:34,740
找到物流的这时候呢，可能可能会使用这个统计信息进行一些更优秀一些物流化这里

39
00:02:34,745 --> 00:02:36,330
一个自己的两个型

40
00:02:36,630 --> 00:02:38,190
最终会生成这个

41
00:02:38,430 --> 00:02:43,740
向下发的这个执行计划就执行计划发下去之后其实就跟她的日本本身这个

42
00:02:43,890 --> 00:02:47,550
自己的资源使用关系不大吧主要是想他可以发送请求

43
00:02:48,570 --> 00:02:53,880
下面这个图其实就是我，我用够了这个这个自带的这个

44
00:02:54,090 --> 00:02:57,150
工具对他的比赛会进行的一个部分哦

45
00:02:57,510 --> 00:03:02,820
然后他可以看到整个上面这个，每个过程当中到底使用了多少？CP，用哪部分用的？

46
00:03:02,825 --> 00:03:07,980
最大的挑战在于最小，所以说下图这是一个就是说用的普通的

47
00:03:08,040 --> 00:03:13,230
自己抓出来的火焰图就大家自己在这个进行星星条约的时候，也可以进行站的抓取

48
00:03:13,590 --> 00:03:18,900
然后抓取出来文件，其实大家如果可能自己看也可以，或者是拿个给可以给我这个

49
00:03:18,905 --> 00:03:21,960
她他就俾相关同事进行基础知识也可以

50
00:03:23,640 --> 00:03:25,320
下面是这个内存部分

51
00:03:25,350 --> 00:03:27,870
呃，内存主要是这个

52
00:03:28,230 --> 00:03:29,490
这对于

53
00:03:29,580 --> 00:03:34,890
这个让来讲是一个自带tc的一个语言，我们沟通写的他对比嘛，所以说本身内

54
00:03:34,895 --> 00:03:40,110
存分配次数如果过多的话，最终其实还是会反映到CPU上所以说内存的这个

55
00:03:40,115 --> 00:03:43,200
资源使用，最终其实也反正也是一个CPU的使用

56
00:03:44,670 --> 00:03:46,050
然后是网络

57
00:03:46,320 --> 00:03:51,630
这里我列了一下，就是大家常见的一些，就是尝试性的一些经验值吧，就比如说

58
00:03:51,635 --> 00:03:56,940
我们这个还有一个开始，需要实验是多少，然后访问这个内存的需要的实验多少这里有

59
00:03:56,945 --> 00:04:02,250
重点标注了两行，一个是我顺序读依照这个内存所需要时间

60
00:04:03,060 --> 00:04:05,070
然后另一个是我同学

61
00:04:05,100 --> 00:04:10,410
从一顿一赵从网络读依照这个是需要实践，大家可以看到这样的值差别还是非常大的

62
00:04:11,130 --> 00:04:16,440
也就是说，如果是进行一次简单，这次访问和进行一次简单的一个网络访问的话，其实她

63
00:04:16,445 --> 00:04:19,590
所有的话费的时间是差距是非常非常大的

64
00:04:19,800 --> 00:04:21,840
这里可以看到大概有四倍的差距

65
00:04:22,080 --> 00:04:25,500
哦，那下面我们介绍一下这个网络资源这部分

66
00:04:25,740 --> 00:04:31,050
因为上映，我们介绍就是说呃，通过网络进行处理，所有的话，实际上也是不通过的

67
00:04:31,055 --> 00:04:36,360
是访问要慢非常多的，所以但是他BB本身是一个对网络依赖非常重的一个一个组件

68
00:04:36,420 --> 00:04:38,820
实际我们看一下，就是说

69
00:04:38,970 --> 00:04:44,280
呃，在启动和开这个提交事务的时候，我们分别会向被

70
00:04:44,285 --> 00:04:45,960
或者两次ts

71
00:04:46,200 --> 00:04:49,710
我们称这两次一次需要42天hcg，可没有TF

72
00:04:49,800 --> 00:04:55,110
然后每个事物的启动时间都会通过网络或者这次这次大题，然后呢？

73
00:04:55,380 --> 00:04:59,100
呃，如果是这种题要检查，比如说像这个？

74
00:04:59,105 --> 00:05:04,410
例子他是一个例外，它是不需要获取这个4 ST s的就是其中这个四个先刷

75
00:05:04,415 --> 00:05:08,310
比VI=1这个条件爱呢是一个硬件的逐渐

76
00:05:08,640 --> 00:05:13,860
然后对于只读的试用，它是不需要获取这个课没体验试试，它没有任何东西可以提交

77
00:05:14,340 --> 00:05:19,650
他对于非指读的事物呢？其实他最终的提交什么还会获取ST ST计较的

78
00:05:19,655 --> 00:05:20,670
没有TF

79
00:05:21,690 --> 00:05:27,000
然后开始提交呢，其实是一个额分布式并发操作，但是呢，他也是

80
00:05:27,005 --> 00:05:32,310
要做很多次网络就是因为我们的数据和作业是分开存的，所以kv的可以，他需要走数

81
00:05:32,315 --> 00:05:33,150
不能养部分

82
00:05:33,450 --> 00:05:35,850
然后第三部分就是袜子

83
00:05:36,090 --> 00:05:41,400
因为我们本身太kv是又要出现了，实现一个高考用嘛，所以说这里有一个

84
00:05:41,405 --> 00:05:46,710
软件体验一个说他要达到的这个大多数一致，这个部分是它可以为一个人的，但是也是

85
00:05:46,715 --> 00:05:49,410
是记得整个体验的时间里面的

86
00:05:50,940 --> 00:05:54,870
我们可以看一下下面这个意思就是我如果说可以在退役

87
00:05:54,900 --> 00:05:57,210
然后这个是按因此10k

88
00:05:57,570 --> 00:06:02,880
然后呃，这种情况下呢，就是说我会创建一个一张表，只有一个

89
00:06:02,885 --> 00:06:08,190
应酬的逐渐因为应酬的唯一所以然后呢？这时候我音色into y vivid seat

90
00:06:08,610 --> 00:06:10,680
31，这时候插入一行数据

91
00:06:10,860 --> 00:06:14,040
然后我简单做做下面这个啊不对t32=2

92
00:06:14,520 --> 00:06:19,830
然后简单的这么一条语句，其实可能在买，所以可以做的事情还是比较简单的，就是各过

93
00:06:19,835 --> 00:06:25,140
相对于我来讲是一个月比较短一些，但是在他的心里呢，他写他分了一个价格几个？

94
00:06:25,145 --> 00:06:26,010
阶段

95
00:06:26,250 --> 00:06:31,560
在我们主要看一下，就第一个阶段，这里有一个启动阶段，这里获取了一个42 tsc

96
00:06:31,565 --> 00:06:33,150
我们上面讲的那个地方

97
00:06:33,360 --> 00:06:38,670
只要第二阶段就是读阶段，读阶段是这样，她要读一次，所以因为这个表示

98
00:06:38,675 --> 00:06:43,980
所有所以也是有这个表的数据的，所以说他要先去把所以给出的数据读出来了再进来

99
00:06:43,985 --> 00:06:45,330
读读这个演出季

100
00:06:45,930 --> 00:06:46,830
相当于

101
00:06:46,980 --> 00:06:49,050
大家常讲的这种回表操作

102
00:06:49,170 --> 00:06:50,790
第三个阶段是提交阶段

103
00:06:50,970 --> 00:06:56,280
其实我读了这一行，属于之后我要进行提交，提交的时候提交，当时提交之前，我要先把这

104
00:06:56,520 --> 00:06:59,610
植轩计算好嘛，就是别我把这个医药

105
00:06:59,640 --> 00:07:00,660
啊，对称二

106
00:07:00,665 --> 00:07:05,790
这时候呢，首先还要获取一次这个课没有TF然后呢，还要进行这个

107
00:07:05,820 --> 00:07:11,130
呃，太kv的两次写入两次写入分别是因为他我们对应的两个椎枕有这个数据段和这

108
00:07:11,490 --> 00:07:13,440
然后还有下面这个

109
00:07:13,590 --> 00:07:18,900
因为我们要进行一次两个月提交，因为他不KTV是一个分布式的一个数据库，所以

110
00:07:19,380 --> 00:07:24,690
只是进行简单的写入是不行的，不是我写了之后立刻将提交，而是我要进行一次预提交

111
00:07:24,695 --> 00:07:27,780
然后还要进行最后一次的确认的提交，这两个部分

112
00:07:28,020 --> 00:07:30,390
这个整个这个两次的，还有再成员

113
00:07:30,690 --> 00:07:34,440
然后刚才讲的那部分部分，所以她开始她之间的还有一个

114
00:07:34,530 --> 00:07:38,220
这里面是包含了他在这个写入key的个数在这里呢，是两个

115
00:07:38,400 --> 00:07:42,030
然后呢乘以它的副本数除以2+1就是大多数的一致

116
00:07:42,540 --> 00:07:45,300
然后这个都是必要，必须要等待的时间

117
00:07:45,330 --> 00:07:50,640
当时其实可能最终总的发短文情节比较多多，因每一个副本都需要第二批次网络请求

118
00:07:50,645 --> 00:07:53,670
等待至少一个是一个这个大多数的这个请求

119
00:07:54,420 --> 00:07:57,900
用途其实就介绍了这个两年提交，到底是怎么回事？

120
00:07:58,140 --> 00:08:03,450
这两个提交这个协议呢？其实是一个分布式为主要的一个大家用来

121
00:08:03,455 --> 00:08:08,760
进行这种分布式事务的协议，嗯，当时其实是旅游上还有一些，比如说三年级题要这样

122
00:08:08,765 --> 00:08:10,590
算法这在实践再

123
00:08:10,860 --> 00:08:16,170
质量应用中的话，还是要提交是一个最主要的一个协议，行人来提交主要

124
00:08:16,175 --> 00:08:21,480
过程就是从一一一个协调者这个协调者，对于这个加入外

125
00:08:21,485 --> 00:08:26,790
这就是说，上次的这个他也节点相当于这个协调者，然后下层的这个每个tak t姐姐想

126
00:08:26,795 --> 00:08:27,840
可能一个

127
00:08:27,845 --> 00:08:28,950
这个参与者

128
00:08:29,550 --> 00:08:30,390
然后

129
00:08:30,480 --> 00:08:35,790
整个事物提交的时候需要经历两个阶段，第一阶段先发出两个不是培养明明先让这个

130
00:08:35,795 --> 00:08:37,650
都这个吧，数据匹配好

131
00:08:37,770 --> 00:08:40,200
大家都同意的事情况下就是每个

132
00:08:40,380 --> 00:08:44,550
几个参与者都返回？这个不是拍，而是成功的情况下，我整个事物才能提交

133
00:08:44,880 --> 00:08:48,480
然后呢，这时候都返回到他他上层，前提是几年之后呢？

134
00:08:48,540 --> 00:08:49,650
会把这个

135
00:08:49,740 --> 00:08:50,550
呃

136
00:08:50,670 --> 00:08:55,980
可能也请求发过去，然后让两个这个参与者的把事务提交上去，这样才能保证这个事故

137
00:08:55,985 --> 00:08:56,610
不行

138
00:09:00,570 --> 00:09:05,880
下面讲一下这个最后一个资源，这个资源就是所这部分在客观事物上，其实只有

139
00:09:06,030 --> 00:09:11,340
提交时候需要加多，所以大部分时间整个事务这样先我们是不需要加锁的，但是体验

140
00:09:11,345 --> 00:09:16,650
到时候加锁主要是在这个普锐斯之后，普通的以后我要把这个我需要

141
00:09:16,655 --> 00:09:19,650
提交的15，加上锁，然后当他妹子的时候，我去放松

142
00:09:20,130 --> 00:09:25,440
然后说爱她，完了之后这个事物实际上可能会等一段时间才会遇到这个可能也轻轻

143
00:09:25,445 --> 00:09:28,530
所以说，在这个期间内，所有的请求都是

144
00:09:28,800 --> 00:09:34,110
有可能会被阻塞住的，有可能阻塞，这种情况一种是读写冲突，就是说在这个普通的

145
00:09:34,115 --> 00:09:36,900
先有任何的毒请求，都会需要等所

146
00:09:37,230 --> 00:09:41,940
然后第二种就是有协警求救是有另外的出来的游戏过来，她也需要

147
00:09:41,970 --> 00:09:45,420
惊喜的话，他也需要有这种写字，等待就是写成图

148
00:09:45,480 --> 00:09:46,170
接触多

149
00:09:46,560 --> 00:09:49,800
这样一个冲突，指的是主要是嗯

150
00:09:50,820 --> 00:09:53,610
就是说正好读写挺有遇到了正在提交的事

151
00:09:54,240 --> 00:09:57,090
然后在他那个里面跟那个就是

152
00:09:57,095 --> 00:10:02,400
传统的单机数据库里比较不一样，一个地方就是我们用这种白卡号好的机制上单位数

153
00:10:02,405 --> 00:10:07,710
等所的时候，他可能会用一种这种呃系统自带这种就是锁的实现进行

154
00:10:07,715 --> 00:10:13,020
就所而他的b实现的是什么？白靠谱，其实也就是说，它是不断地进行请求，请求之后，然后

155
00:10:13,560 --> 00:10:14,910
它可以告诉我这个

156
00:10:15,930 --> 00:10:21,240
此处有这可以有所，所以你不能这个进行读或者写，然后呢，就会把这个

157
00:10:21,330 --> 00:10:23,160
信息返回上来，然后他这边就

158
00:10:23,250 --> 00:10:28,560
直到这个返回请求，然后呢？我知道这个时候是有锁的，我需要等一段时间

159
00:10:29,160 --> 00:10:34,470
等到时间之后呢，我再去请求，然后对方的时候，如果这时候还是有损的话，我还要

160
00:10:34,740 --> 00:10:40,050
在访问我还需要再等一段时间，直到这个超市位置，所以它是一个不断增加的时时间

161
00:10:40,055 --> 00:10:41,790
知道超市的这么一种机制

162
00:10:41,820 --> 00:10:47,130
当然，如果你这个后续请请求发这个，所以没了，再然后你就可以正常听读写了这个

163
00:10:47,135 --> 00:10:50,580
就是相当于说一点像摄影就可以正常的情况操作这个事

164
00:10:50,850 --> 00:10:52,140
我们就不再继续介绍

165
00:10:53,010 --> 00:10:55,740
然后下面是不同负载，对于性能影响

166
00:10:56,280 --> 00:10:57,540
一个是这个

167
00:10:58,020 --> 00:11:03,330
读请求读请求分为这么几部分，一部分是这个她的BB内部的这个g

168
00:11:09,150 --> 00:11:10,740
扔出来，然后发给客户端

169
00:11:10,800 --> 00:11:12,960
然后第二部分是k维度

170
00:11:13,410 --> 00:11:17,460
K阅读就是我直接向tak t进行这种kv改成这种操作

171
00:11:18,240 --> 00:11:23,550
稍微顿，什么时候会发生呢？就是在这种通过泰kv这个赛道瑞的裤子进行进行检查或

172
00:11:23,640 --> 00:11:25,320
更新或者删除的时候会

173
00:11:25,325 --> 00:11:29,910
出现这种k，唯独但是我们21做的一个优化就是当我们

174
00:11:29,940 --> 00:11:35,250
这个可以确定，这行业涉及到一个可以多少时候我们可以听这种操作，然后这种

175
00:11:35,255 --> 00:11:40,560
操作的时间上，呃，略过大部分的这个执行国际实际上走一个最短路径

176
00:11:40,860 --> 00:11:43,710
内部我们称它为叫我啪啪啪怕怕死

177
00:11:44,520 --> 00:11:46,470
这种读书效率最高的一种毒

178
00:11:47,070 --> 00:11:52,380
第三个读书靠谱30度靠谱，塞尔顿就是饿决赛部分，如果是不能满足上面这个

179
00:11:52,385 --> 00:11:54,900
可以读条件的时候，我们都会走靠谱塞尔顿

180
00:11:55,260 --> 00:12:00,570
都会通过它，可以考虑32次把数据读上来，这种毒就是能适用于最多的情况，但是

181
00:12:00,575 --> 00:12:05,190
他也是额，相当于讲处理的流程逻辑是最复杂的

182
00:12:06,480 --> 00:12:09,540
下面是谁？请请请请请就是这个

183
00:12:09,660 --> 00:12:12,900
包含了这个泰迪BB，这个内部计算还有兽诀交两部分

184
00:12:13,410 --> 00:12:18,720
Cab内部计算的也比较简单，就是耽误这个，比如进行上了一个阿贝的操作，我可能要

185
00:12:18,725 --> 00:12:24,030
这个读上来的数据进行一个变换，把它变换成我需要变换需要写

186
00:12:24,035 --> 00:12:24,720
弱智

187
00:12:24,870 --> 00:12:30,180
然后第二部分就是事物提交了受不要就是刚才我讲的就是他也需要有做了很多的事

188
00:12:30,185 --> 00:12:32,280
应该完成演员提交等等企业过程

189
00:12:35,250 --> 00:12:40,230
然后读请求这个呢？我们讲一下，跟卖CK的差异吧，然后就是第一部分就是说

190
00:12:40,260 --> 00:12:43,740
呃，他与众其实是没有任何的读缓存的

191
00:12:44,310 --> 00:12:49,620
他不想买c，购买c口其实是有八号铺的，像这个o尔克等其他数据共其实也是八号铺

192
00:12:49,890 --> 00:12:52,680
自身上的这个组件是没有这个缓存这部分

193
00:12:52,685 --> 00:12:57,120
所以说我如果要读任何数据我都需要从他开回去把数据拉上来

194
00:12:58,140 --> 00:13:02,670
然后但是他kv中，他就必须中是有这个事物的，所有的叶缓存

195
00:13:02,970 --> 00:13:06,360
事物内部的数据会暂时缓存在这个事物内部

196
00:13:06,750 --> 00:13:12,060
然后缓存在这部分数据呢？实际上，这个是事物内部的自己一个48分，所以

197
00:13:12,065 --> 00:13:14,880
这也是一定程度上保证了一个数据隔离性

198
00:13:15,030 --> 00:13:17,790
然后当这个读请求也

199
00:13:17,940 --> 00:13:21,390
不到混合的数据的时候会与她QQ上的数据经合并

200
00:13:21,750 --> 00:13:23,490
可以看下下面这个简单的一

201
00:13:24,660 --> 00:13:29,970
呃，就比如说我这个是演员，是一个空表，我只是写一行数据因素的因素因素

202
00:13:30,000 --> 00:13:35,310
这个该死的表，然后我们有四亿人，这时候我比便宜，如果银色的饰因素班有啥？

203
00:13:35,315 --> 00:13:37,650
二的时候，这时候11上

204
00:13:37,800 --> 00:13:43,110
虽然我现在一个三星给做的，但是我前面这个音素的这个一已经写出了他kv了然后

205
00:13:43,115 --> 00:13:44,820
也不会去换成这个意义

206
00:13:44,825 --> 00:13:50,130
如果说到下面我再去进行死了那个的时候，谁让我还是会去看kv去？

207
00:13:50,135 --> 00:13:52,050
把这个一定数据捞上来

208
00:13:52,440 --> 00:13:57,750
然后呢，同时呢，我还会把事物自己的已经写入这个二年了，也都上来的时候

209
00:13:57,755 --> 00:13:58,560
会吧！

210
00:13:58,565 --> 00:14:02,070
15里的一和这个skt的已经合并

211
00:14:03,210 --> 00:14:08,520
这就是造成一问题，就是说像大大家都知道他这个实际上在这种情况下就变成一个单

212
00:14:08,760 --> 00:14:14,070
就是说的我们可能下面有很多的一个一个阶段，一个特别的群，所以

213
00:14:14,075 --> 00:14:19,380
为什么我这个读请求？其实我是可以并发的，让多个他特别会执行，但是事务内部自身的

214
00:14:19,385 --> 00:14:21,360
数据其实只有它，也别自己

215
00:14:21,930 --> 00:14:23,400
能够处理的呀

216
00:14:23,490 --> 00:14:28,800
他只在她一并内部自己存在，所以在事物自己的存在，所以这个这个合并过程的是

217
00:14:28,805 --> 00:14:31,920
实际上是仅在她的b里一个单位内部处理

218
00:14:32,220 --> 00:14:37,230
事物类的数据如果是过大的话，其实会大大降低这个，最终这个读的性能

219
00:14:41,190 --> 00:14:44,520
这种看一下这个写请求跟这个买CF差异

220
00:14:45,000 --> 00:14:50,220
其实事物在提交前呢就是db缓存所有这个即将提交修改，然后

221
00:14:50,310 --> 00:14:55,620
呃，其实我对于这个一致性检查是有这个要求的，也是会进行大量的毒，就比如说

222
00:14:55,625 --> 00:14:56,310
说

223
00:14:56,370 --> 00:15:01,680
我在这个事故当中，我需要呃呃呃，不是这些某一行，然而不在这行之后他

224
00:15:01,685 --> 00:15:03,000
对对对

225
00:15:03,060 --> 00:15:04,290
出来的值

226
00:15:04,440 --> 00:15:09,750
我并不知道这个值是不是合法，是不是满足这个一致性约束的就是我是不是满足？

227
00:15:09,755 --> 00:15:12,480
他的所以是唯一的等等这些条件

228
00:15:12,930 --> 00:15:16,020
所以我要去才可以去拆去检查这个

229
00:15:16,140 --> 00:15:18,090
是不是在他这边有一个数据？

230
00:15:18,570 --> 00:15:23,760
但是呢，他这边也做了一个额外优化就所谓的我们的这个应算成功率差

231
00:15:24,000 --> 00:15:29,310
这次可以看你是什么意思？就是说对于普通的音色特来讲，这样这里不包括这个因素的

232
00:15:29,315 --> 00:15:31,470
你想想就知道对着这样的这种语句

233
00:15:31,770 --> 00:15:34,950
所以普通银色的来讲，其实我是一个延迟检查的

234
00:15:35,760 --> 00:15:37,650
什么意思呢？我们看一下右边

235
00:15:40,080 --> 00:15:43,680
这有这一张表也是写如果一行数据，这时候

236
00:15:43,685 --> 00:15:44,940
呃

237
00:15:45,090 --> 00:15:48,720
这个数据是一，比如说，它还是存在一个为所以的

238
00:15:49,020 --> 00:15:49,770
然后

239
00:15:49,890 --> 00:15:55,200
呃，我这时候比干再一次11的时候，这时候买30其实很快，他会特意和检测

240
00:15:56,100 --> 00:16:00,360
因为他知道这个表演人存在一个数据，一二这个仪式已经提交过了

241
00:16:00,480 --> 00:16:05,490
然后后面在这个社会再写一个冲突的课的时候，这就会进行，他就会报错

242
00:16:05,820 --> 00:16:09,840
然后呢，买cq是有一句回滚的这种特性的，所以说

243
00:16:09,845 --> 00:16:15,150
它可以记忆执行，比如说他在音色的音图标有三二这个第二条就是成功的，然后她提交

244
00:16:15,155 --> 00:16:17,100
不能买，最后这个会提交成功

245
00:16:17,790 --> 00:16:22,740
所以整个事物理来讲，从笔给你开门的四条语句，实际上就只有第二条师

246
00:16:23,040 --> 00:16:26,130
然后第三条成功的最终呢，其实它

247
00:16:26,160 --> 00:16:28,230
再读一下这个表的话，就会发现

248
00:16:28,440 --> 00:16:30,420
把所有可以读到两条就是说

249
00:16:30,425 --> 00:16:33,090
银色的第一个玩游戏，还有这个

250
00:16:33,300 --> 00:16:35,220
在第二个15写的这半小时

251
00:16:36,750 --> 00:16:42,060
但是呢，他的她就是不一样的，她这个必须先假设这个整个事物里没有可冲突的

252
00:16:42,065 --> 00:16:43,140
在这个

253
00:16:43,470 --> 00:16:44,220
嗯

254
00:16:44,340 --> 00:16:49,650
出去也就是说我这个你别干了，之后我硬塞的硬头发，要是这时候他就是在这里不汇报

255
00:16:51,240 --> 00:16:56,550
然后呢？我在银色银珠盖了仨，然后这时候其实也不会报错，因为在事物内部并没有

256
00:16:56,555 --> 00:16:57,570
请冲突嘛？

257
00:16:57,780 --> 00:17:01,650
然后我最后肯定可能有时候是这样，这时候他就比才会进

258
00:17:01,740 --> 00:17:03,240
一致性的约束检查

259
00:17:03,480 --> 00:17:05,850
然后这时候这个这时候就会报错了

260
00:17:06,570 --> 00:17:07,590
然后

261
00:17:07,595 --> 00:17:12,900
最终可能读出来的时候，在整个15这个因为这时候报15提交的报错吗？

262
00:17:12,905 --> 00:17:15,060
是提交保存整个事物是需要回滚的

263
00:17:16,110 --> 00:17:19,560
检查的时候可能读数据的时候他就比如回忆

264
00:17:20,280 --> 00:17:21,360
就跟买四个饼

265
00:17:21,390 --> 00:17:22,800
差异比较大的一个地方

266
00:17:28,170 --> 00:17:32,880
第二点就是根本，所以差异比较大，就是说我们还是基于我们这个月光是？

267
00:17:33,240 --> 00:17:35,310
就对于他肯定来讲其实

268
00:17:35,850 --> 00:17:39,810
我们经营做一个被疼的是这样的，只是做一次毒

269
00:17:40,080 --> 00:17:42,570
然后呢，提交的时候如果冲突了，怎么办呢？

270
00:17:43,200 --> 00:17:46,440
其实，只要从乐观是我们的做法就是我

271
00:17:46,950 --> 00:17:50,700
所有的检查都是在提交时候再做提交的时候如果冲突我

272
00:17:51,180 --> 00:17:52,110
但是呢？

273
00:17:52,140 --> 00:17:57,450
对于很多用户，其实包括很多习惯，也是用买c，可我习惯是二课用户，他都

274
00:17:57,660 --> 00:18:01,980
会觉得这样的事务失败率太高了，所以我们做了一个受重视的特性

275
00:18:03,240 --> 00:18:05,790
持有重是什么意思？也就是说

276
00:18:05,880 --> 00:18:08,760
我重新获取了一次15的c MT s

277
00:18:09,030 --> 00:18:12,750
然后重新执行了事物内部所有的写操作的锁口

278
00:18:13,350 --> 00:18:17,130
然后相当于把整个事物的时间向后挪了

279
00:18:18,120 --> 00:18:23,430
所有操作都算在了这个可能有依据自身的职能当中，也就是说，其实对用户是无感

280
00:18:24,720 --> 00:18:25,800
哼

281
00:18:26,370 --> 00:18:31,680
大家看一下下面这个例子就是说比如说我在这里比更更更一个事物

282
00:18:32,670 --> 00:18:34,140
前我进行一次被子

283
00:18:34,530 --> 00:18:36,690
我把这个I=1这行啊，不对，这个人

284
00:18:36,750 --> 00:18:39,360
然后我在另外一个塞车的时候呢？

285
00:18:39,960 --> 00:18:45,270
同时也进行一下被子，我把那个也把这个@的一直哈哈进行了一顿

286
00:18:45,330 --> 00:18:46,080
更新

287
00:18:46,920 --> 00:18:48,060
也就是说我在

288
00:18:48,150 --> 00:18:50,970
所谓这个事物的启动，到提交之间

289
00:18:50,975 --> 00:18:53,280
有人把我想改的这张数据改掉了

290
00:18:54,120 --> 00:18:56,400
这就会出现一个写入冲突

291
00:18:56,580 --> 00:18:58,680
所以在这里肯定的时候

292
00:19:00,120 --> 00:19:04,740
他会在他一边那一幕的发生一个事情，就是说他初次提啊，他是会

293
00:19:04,920 --> 00:19:10,020
曝出爆出来一个失败的这个一个一个老师，但是这个指挥存在于一日之中

294
00:19:10,200 --> 00:19:11,820
并不会刺激反应客户端

295
00:19:12,390 --> 00:19:17,700
然后呢，他发现这个失败之后，它就会自己把这个整个受精从事也就是把

296
00:19:17,705 --> 00:19:19,740
这个比更大，肯定在执行一遍

297
00:19:20,850 --> 00:19:24,510
咱那个效果就是相当于把整个事物挪到了这个阿背背她

298
00:19:24,750 --> 00:19:25,380
唉

299
00:19:25,470 --> 00:19:27,030
等于三的这个语句后面

300
00:19:27,960 --> 00:19:32,010
然后这样的话就相当于把这个锁起冲突这个问题给解决了

301
00:19:32,280 --> 00:19:33,420
反而这个

302
00:19:33,570 --> 00:19:38,880
对于一些对如果说对对对要求比较严格的一些操作来讲，或者这个这个

303
00:19:40,230 --> 00:19:43,800
默默地经营这个操作，实际上是违法，这个耳塞给级别的

304
00:19:47,430 --> 00:19:52,740
第二部分就是我介绍一下这个他那个子的一个监控项呃，我把我认为的一些跟

305
00:19:52,745 --> 00:19:58,050
性能还比较相关的一些，因为前面我们就要原理嘛，其实现在相关的一些监控项给大家

306
00:19:58,260 --> 00:20:03,570
呃，一般嘛，就是说如果说大家发现有些问问题的时候，要么第一个就是

307
00:20:04,170 --> 00:20:06,900
呃，看见孔要么一个就是看这个慢日志

308
00:20:07,320 --> 00:20:12,180
才会发现，这些可能说有什么新的问题，所以说先我们先介绍这个监控项

309
00:20:12,690 --> 00:20:14,160
今天你说了这些

310
00:20:14,760 --> 00:20:16,140
后面我们一个月看

311
00:20:16,170 --> 00:20:18,900
第一个是九月份

312
00:20:19,410 --> 00:20:23,280
学生可能是大家最常会看的一个监控

313
00:20:25,140 --> 00:20:30,450
所以说，其实本身也这里也不是特别在意，因为我估计每一个同学都会看

314
00:20:30,455 --> 00:20:31,950
这个对医生这个面板

315
00:20:32,250 --> 00:20:35,520
但是但是把它写出来，实际上是想告诉大家

316
00:20:35,670 --> 00:20:38,550
这个寡妇难的公式其实是可以任意编辑的

317
00:20:38,970 --> 00:20:39,630
一些

318
00:20:39,720 --> 00:20:41,940
让你编译之后，其实我可以达到一个

319
00:20:42,090 --> 00:20:44,730
就更好效果，或者达到希望达到效果

320
00:20:45,450 --> 00:20:47,220
比如这个90的公式

321
00:20:47,640 --> 00:20:49,080
我可以在这个

322
00:20:49,320 --> 00:20:51,270
在官方面板上进行@一次

323
00:20:52,140 --> 00:20:53,790
比如加入下面这个公式

324
00:20:54,180 --> 00:20:56,730
我就可以计算出这个平均的岩石

325
00:20:57,180 --> 00:21:01,440
就不是这种按照这种八棱线，九五线，只有线九线线这种来分的了

326
00:21:01,560 --> 00:21:02,880
我可以再加上脚线

327
00:21:06,690 --> 00:21:11,430
第二个月吧，就是说q PS还有这个PS白银四点才有一特别的是PS

328
00:21:12,690 --> 00:21:18,000
其实这里特别需要注意的一个点就是因为客户大家都会看嘛，就是一个这个面板可能

329
00:21:18,005 --> 00:21:22,200
总的课表这个面板是一个按照这个因此能来分的课PS

330
00:21:23,430 --> 00:21:28,740
最后这个是一个内部，英特尔科比，因为他的作品，而是其实就是饿他一内内

331
00:21:28,745 --> 00:21:34,050
因为也需要获取一些数据啊，或者是做一些更新更更新系统表什么的这些

332
00:21:34,230 --> 00:21:35,730
我坐坐

333
00:21:36,060 --> 00:21:37,860
产生的这种这种宽容

334
00:21:38,100 --> 00:21:41,190
统计所以最后是一个令英特尔q PS

335
00:21:44,040 --> 00:21:48,240
就需要注意的就是，如果说有异常高的英特的话可能会

336
00:21:48,540 --> 00:21:52,590
第一，可能它意味着系统的一个不正常，第二就是他可能会

337
00:21:52,595 --> 00:21:56,040
导致你的这个普通的课程还是直播，很准

338
00:21:56,790 --> 00:22:00,060
这个整体的，特别的是包含这个因素的PPS

339
00:22:01,080 --> 00:22:04,350
所以这时候要注意这个整体的一些精神特别的整体

340
00:22:04,560 --> 00:22:09,750
如果说英语看图片是比较正常啊，这时候你就性能，你就看自己这个这个就可以了

341
00:22:10,050 --> 00:22:14,460
但如果不是的话，如果应该是可以达到比如说几百可能他就是一个

342
00:22:14,520 --> 00:22:16,650
比较异常的值了然后这时候可能

343
00:22:16,740 --> 00:22:19,110
整体客户自己要进行相应的扣减

344
00:22:22,830 --> 00:22:24,720
第三个是这个，可能是看到的

345
00:22:25,020 --> 00:22:28,860
这里呢，就是由于我们这个有这个一个特别美的大家可能

346
00:22:28,950 --> 00:22:33,060
属于他的毕业的同学会知道特别有一个叫同学妹子的一个参数

347
00:22:33,990 --> 00:22:38,190
她要是默认的值是1000，其实这个参数后面我会介绍

348
00:22:38,370 --> 00:22:39,210
然后

349
00:22:39,510 --> 00:22:43,980
其实这次这个这个原则原因也是就是不建议在一个泰迪壁上

350
00:22:43,985 --> 00:22:49,290
创建太多，连接穿太多，连接来讲就是说这时候每个人也都会这样

351
00:22:49,295 --> 00:22:51,180
资源其实他就比较像

352
00:22:51,185 --> 00:22:56,490
这个能怎么说呢？跟马赛克跟这个二货一样的，这样就是我们是一个无状态可以很宽阔

353
00:22:56,495 --> 00:23:01,800
一个数据库，然后与其你在一个台就比创业很多年级还不如多起一个

354
00:23:01,805 --> 00:23:04,260
比比实力，让他把车给人家接下来

355
00:23:06,390 --> 00:23:11,700
然后下面是这个嘿嘿，卖萌又是就是说我们一般通过这个面板看到这个，比如说

356
00:23:11,705 --> 00:23:14,220
嘿嘿，有异常的，这个变化，比如说

357
00:23:14,700 --> 00:23:19,890
嘿嘿，皮的快速的增长，就是内存的快速增长，达到的，比如说几十技术或上百g

358
00:23:20,580 --> 00:23:25,890
然后这时候可能就会出现一些问题，出现一些问题的时候，我们怎么查的问题可能就是？

359
00:23:25,895 --> 00:23:26,760
已经批复了

360
00:23:26,910 --> 00:23:29,160
嘿嘿，不是一个一个原因吧！

361
00:23:29,550 --> 00:23:30,600
让我们放下那些

362
00:23:30,810 --> 00:23:33,840
有问题的时候，我们可能不会进行一些科技配置操作

363
00:23:37,140 --> 00:23:40,080
下面是这个第34页上的版本

364
00:23:41,310 --> 00:23:46,620
之前刚才讲过了是她就是她，我们基于这种妖怪是五个省，我们会把所有的

365
00:23:46,625 --> 00:23:48,600
在这个语句先缓在自己内部

366
00:23:48,750 --> 00:23:51,510
然后呢，在进行这个

367
00:23:52,590 --> 00:23:53,370
最终会

368
00:23:53,375 --> 00:23:58,680
把所有的这个是那些如果操作在特定的时候进行一次提交，所以说不建议这个

369
00:23:58,685 --> 00:24:03,990
也是我们的语句太多，所以这个面板就是应该看是否否是一个事物内句特别多

370
00:24:04,830 --> 00:24:06,660
但我这个截图里边其实也

371
00:24:06,690 --> 00:24:09,720
但语句那单单是我那一句，时间大概就是一条

372
00:24:09,930 --> 00:24:15,240
但如果是这个面板也是非常高的话可能要注意，可能这时候对泰利必本身就

373
00:24:15,300 --> 00:24:16,260
不是很友好

374
00:24:18,660 --> 00:24:20,370
下面是不是出一版本？

375
00:24:20,520 --> 00:24:25,830
女生根本其实指的也是就是刚才我介绍事物的会比如说呃他一个当然遇到写出通

376
00:24:25,835 --> 00:24:28,980
从从头的时候，我会进行这个事务的城市

377
00:24:29,670 --> 00:24:34,860
然后整个事物从事呢，都是包含在这个提交这一个语句是内的，所以说

378
00:24:35,640 --> 00:24:38,460
还是说，如果说这个城市次数特别多的话

379
00:24:39,060 --> 00:24:43,170
相当于我一个语句执行了别人的十几个语句或几十个语句的工作

380
00:24:44,040 --> 00:24:44,790
然后

381
00:24:44,820 --> 00:24:46,500
肯定就会显得会比较慢

382
00:24:46,800 --> 00:24:52,110
然后就是一个查看有没有受重视的一个依据？当然了，它同样也是这个

383
00:24:52,115 --> 00:24:53,280
看看你这个

384
00:24:53,490 --> 00:24:55,680
呃，业务复杂，是不是有这种？

385
00:24:55,770 --> 00:24:58,290
平台更新，同一个热点的一个一个依据

386
00:25:01,290 --> 00:25:06,600
下面是这个ky卡牌，我不知道不知道不知道不是这个，这个是奥迪

387
00:25:06,960 --> 00:25:08,580
这两个其实指的

388
00:25:08,760 --> 00:25:12,690
基本上是同一事情，也是跟上面讲的这个数冲突有关的

389
00:25:13,290 --> 00:25:14,040
就说

390
00:25:14,045 --> 00:25:19,350
呃，如果当事物进行冲突的时候，就是我会进行这种刚才我说等所怎么办？高操作

391
00:25:20,040 --> 00:25:25,350
呃，这个原我们介绍两个班班主要是考好好吧，这个就是建设的卡，这个就代表

392
00:25:25,355 --> 00:25:28,230
我15在写的时候，别的书也要写

393
00:25:28,380 --> 00:25:30,090
只是我就要进行反抗

394
00:25:30,095 --> 00:25:33,180
这样进行，是这个天坑这个身高啊现在

395
00:25:33,360 --> 00:25:37,890
这就是说，当这个事物正在写这样提交的时候，遇到了就是比如别的事情

396
00:25:38,370 --> 00:25:42,030
的语句要怪毒会长tx o的发型

397
00:25:42,990 --> 00:25:48,300
他们也是间接表现了这个，呃，有这种事物冲突的情况

398
00:25:49,650 --> 00:25:54,840
然后又因为这个面板这个绕回去，实际上就是我说那种，就是当这个

399
00:25:54,960 --> 00:26:00,060
额外考超过他的这个最大值之后，超过她的预设的这种

400
00:26:01,230 --> 00:26:05,700
提前了之后就是我们会进行一个解锁操作就相当于如果

401
00:26:05,760 --> 00:26:11,070
这个这个事物太长时间没有提交，我们要想办法把这个事没有提交事务我来干掉

402
00:26:12,780 --> 00:26:15,300
然后这个会显示在这个面板里面

403
00:26:15,330 --> 00:26:16,230
你说有没有？

404
00:26:16,380 --> 00:26:18,510
尝试去干掉别的事物，这种事情

405
00:26:23,520 --> 00:26:25,860
下面这个面板就kv肯定了，就是神

406
00:26:26,100 --> 00:26:29,760
就这个吧，对于他这个演讲是比较重要的一个面板就是说

407
00:26:30,360 --> 00:26:34,710
他是一个到底区分这个问题是出现在它的一笔一测，还是他开了一侧的？

408
00:26:35,370 --> 00:26:37,170
他就是知道，就是说

409
00:26:37,200 --> 00:26:40,260
本身这个泰迪b的可以的，其实可以做很多事情

410
00:26:40,380 --> 00:26:45,300
所以本身也没做什么事情？就刚才我讲，比如说事物可能遇到冲突会进行

411
00:26:46,020 --> 00:26:50,340
包括如果你打开了边撞了之后，他就变着肯定也会要写编号了

412
00:26:51,000 --> 00:26:56,310
然后所以说真正的就是稍微做这种给能提交这个过程时间上

413
00:26:56,670 --> 00:26:59,550
是整个他的壁纸肯定他的一小部分

414
00:26:59,640 --> 00:27:02,670
但是这个面板实际上展示的就是

415
00:27:03,360 --> 00:27:08,010
真正去kv做操作的，所以每个操作的这个一个地位是一个平均的耗时

416
00:27:09,060 --> 00:27:14,370
然后呢，这里边这个可能他就是真正去陪陪进行买卖的，进行进行两个提交的一个世界

417
00:27:15,120 --> 00:27:19,260
然后包括还有这种白痴干的事情去kt进行拜师干死一个时间

418
00:27:19,380 --> 00:27:21,540
所以说，如果你发现

419
00:27:21,930 --> 00:27:25,440
就是整个人的壁纸的这个提交时间很慢很长

420
00:27:25,950 --> 00:27:27,480
然后你再看一下这个面板

421
00:27:27,780 --> 00:27:33,090
然后就可以知道到底是这个，如果说他也很大，直接很慢，这很大这个

422
00:27:33,095 --> 00:27:36,330
然后这时候我们就知道，实际上这是因为？

423
00:27:36,930 --> 00:27:39,810
可能kv的t1曼可能他他他kv那边

424
00:27:40,080 --> 00:27:43,890
但如果说只是他弟弟自己的，这个可没的时间比较长

425
00:27:44,280 --> 00:27:48,600
但是在kv那边，其实这是KC渴望的时间都很短很快

426
00:27:49,110 --> 00:27:51,750
那可能问题就还是出现在他的毕业册

427
00:27:55,800 --> 00:28:01,110
下面是这个跟霹雳相关的一个个人们班，一个是这个tx ov的地位

428
00:28:01,115 --> 00:28:03,150
就是一个是tx y bcd人参

429
00:28:04,920 --> 00:28:10,230
左边这个面板的实际上代表就是我在这个获取就比如说我获取这个

430
00:28:10,235 --> 00:28:11,340
Its

431
00:28:12,030 --> 00:28:15,540
然后到我真正使用CRT s我到底等待了多长时间？

432
00:28:15,900 --> 00:28:19,410
当然，这是一个病发过程有可能的一种情况就是

433
00:28:19,500 --> 00:28:22,500
Cb在向或者这个CP之后

434
00:28:22,890 --> 00:28:25,890
过了很久都没有去使用这个CC ts

435
00:28:26,730 --> 00:28:32,040
也会表现为这个面板会比较高，所以呢，他以为这可能是他抑郁自身慢

436
00:28:32,910 --> 00:28:36,390
然后有一种可能是另外一种可能就是这个或者4 ST s

437
00:28:37,710 --> 00:28:41,550
六个人面板就是真实反映了到底，或者去三亚铁丝花多少？

438
00:28:41,610 --> 00:28:45,570
他就是彻底的就是说我会自个ts花多少毫秒，就是在这里

439
00:28:47,100 --> 00:28:51,810
所以说，这两个卖如果是因为面板是一个较低的值，又不是左边也是比较

440
00:28:51,990 --> 00:28:54,330
只是我可能卖什么样的，他就是自己

441
00:28:54,480 --> 00:28:59,790
就是他就是从这个希望获取萨尔填塞到真正使用这个4 ss的时候画的

442
00:28:59,795 --> 00:29:00,750
比较长

443
00:29:01,260 --> 00:29:04,770
这里面可能有其他的一些原因，就他这一个内部资深，比如

444
00:29:04,950 --> 00:29:10,260
呃处理一些优化啊，怎么怎么把这个色彩优化或或者等等各种事情的时候画？

445
00:29:10,265 --> 00:29:11,310
谁会比较长？

446
00:29:11,730 --> 00:29:12,630
但如果

447
00:29:13,920 --> 00:29:19,230
两个月吧差不多，而且都比较高的话，可能是因为他比比跟霹雳之间这个网络

448
00:29:19,620 --> 00:29:20,640
电视会比较大

449
00:29:21,630 --> 00:29:26,940
好，刚才那个我们介绍一下监控的项目，冠部分就是说有可能这个性能问题是从

450
00:29:26,945 --> 00:29:28,080
监控发现的

451
00:29:28,380 --> 00:29:33,180
下面呢，我们还有一个途径就是通过他这边办日志，发现新的问题

452
00:29:33,540 --> 00:29:37,020
然后我们就介绍一下他一毕业就慢慢的相关的东西

453
00:29:37,320 --> 00:29:42,630
一部分呢其实就是想介绍它的雨，现在是日什么样子，另外就是怎么处理这个日志？包括

454
00:29:42,635 --> 00:29:47,550
这么几个工具，有这个ss b sb那样的，说一下，还有这个还有这个搜索

455
00:29:48,900 --> 00:29:53,730
首先先看一下我这个慢日子一个样例，现在这个manage大概是长这个样

456
00:29:53,735 --> 00:29:56,460
这是这一个旧版的是21的，这个版本里

457
00:29:56,910 --> 00:29:57,870
呃

458
00:29:57,900 --> 00:30:03,210
可能比较欣赏的一版本和江南预计发布30版本就会改变这个样子，这个样子可能

459
00:30:03,570 --> 00:30:05,880
是特别的好看，因为她是白

460
00:30:05,910 --> 00:30:07,380
所有日志打成一行

461
00:30:08,790 --> 00:30:10,890
这里面就包含比如说这个

462
00:30:10,980 --> 00:30:16,290
一个标志性的一个字初二教授，嗯嗯，oo RAY还有这个后面是靠试探

463
00:30:16,295 --> 00:30:17,820
但是指定的时间

464
00:30:18,390 --> 00:30:22,140
然后后面是他的不是38嘛，还有位置，他还有卖靠谱派

465
00:30:22,470 --> 00:30:26,520
这些时间的时间是一个的，他KTV里的一个并发了一个直接的时间

466
00:30:26,730 --> 00:30:30,960
所以说，他的总是实现总和，实际上可能会超过这个靠斯坦

467
00:30:31,650 --> 00:30:34,740
然后就快死了代表他到底是发了多少？一个人快死了

468
00:30:35,400 --> 00:30:40,710
基本上就是对应一个睿智，我们发一个日下面是一个这个偷偷的k才有434k4k

469
00:30:41,250 --> 00:30:45,870
这两个值实际上代表的是什么呢？就是偷偷KC就是我到底是这个

470
00:30:46,470 --> 00:30:47,970
扫描过了多少个k？

471
00:30:48,330 --> 00:30:51,930
Tack s表示，我到底是第几季这个？

472
00:30:52,440 --> 00:30:53,820
到底处理了多少可以？

473
00:30:54,360 --> 00:30:58,380
这样可以这样，只是差别，如果说一个大一个小差别

474
00:30:58,500 --> 00:31:03,810
会比较大的情况下，很大的可能就是我们他可以背里面存在比较大的这样的这种

475
00:31:03,930 --> 00:31:05,790
就是就是数据没有被删除

476
00:31:06,030 --> 00:31:07,200
就过期数据

477
00:31:07,650 --> 00:31:12,960
当我们这个数据计算比较正常的情况下，我们是不需要任何不会有这个这个这个过去

478
00:31:13,620 --> 00:31:16,350
然后所以这时候可能这两个key这个

479
00:31:16,800 --> 00:31:18,360
总数会差的比较小

480
00:31:20,100 --> 00:31:23,460
等后面这个标志就是表示这个是瑞之星

481
00:31:24,960 --> 00:31:29,790
好像包括一些这个可能是哪的呀，然后优质信息啊，还有这个

482
00:31:30,000 --> 00:31:32,730
而事物的一个30 ts，还有的一些

483
00:31:33,060 --> 00:31:36,000
最终会包含这个，这个是我搜狗长什么样子？

484
00:31:36,660 --> 00:31:39,660
这个还是一个比较详细的一些一些内容

485
00:31:40,200 --> 00:31:42,960
然后新版的这个慢慢真的就变成了这个样

486
00:31:43,560 --> 00:31:45,120
呃他

487
00:31:45,240 --> 00:31:50,550
就其他程度上，这个模仿这个买cq本身就蛮热闹的样子，然后更便利

488
00:31:50,555 --> 00:31:52,770
大家用一些工具进行解析

489
00:31:53,160 --> 00:31:56,910
呃所代表这个里面包含着的内容，其实还是这些

490
00:31:56,970 --> 00:31:58,260
跟差不多的那种

491
00:31:59,880 --> 00:32:05,190
然后我可以当我们拿到这么一个半日制，看到一个搜索指定很棒的时候，我们怎么办呢？

492
00:32:05,195 --> 00:32:07,920
可能我们就需要用这种SB来进行

493
00:32:08,610 --> 00:32:10,530
看一下它的执行计划，是不是？

494
00:32:11,370 --> 00:32:16,680
然后一次饭得到，结果就是这个搜狗，具体的听听好像这个里面这个例子就是这个特技

495
00:32:17,130 --> 00:32:20,820
然后第一份包含他的这个到底这个么几个蒜子

496
00:32:21,090 --> 00:32:24,240
这是什么算的？然后这个这个这个算子之间的一个关系

497
00:32:24,960 --> 00:32:28,020
然后是从谁到谁知道谁谁谁谁？

498
00:32:28,230 --> 00:32:33,540
然后下面是第二个代表他的这个抗他就是说他是一个统计信息估计的值到底最美一

499
00:32:33,545 --> 00:32:36,630
个算的，这个也要到底要处理多少多少个k？

500
00:32:36,840 --> 00:32:37,860
多少行数据？

501
00:32:38,370 --> 00:32:43,680
然后第三个他的课代表，他到底是一个是在他那部计算的一个肉色的，但是可能还有

502
00:32:43,685 --> 00:32:47,880
一个小学校去的一个烤盘，32塔就是在kk歌执行的

503
00:32:48,300 --> 00:32:53,610
最后一个部分就是相当于他这个没算是自己的一个执行的一个嗯，更多一个

504
00:32:53,615 --> 00:32:58,590
细节的信息吧，就把它是一个第一个算的，他就一个哥哥哥哥哥，他是一个算子

505
00:32:58,860 --> 00:33:00,960
实际他做的是一个看他的操作

506
00:33:01,590 --> 00:33:02,760
然后呢现在？

507
00:33:02,850 --> 00:33:07,410
在这个地方，实际还是有一个工具，先看的他抗战是这个呃

508
00:33:07,530 --> 00:33:12,480
所有的值，然后上面看看看看看看是什么其中某一个就是应该跟这个配？

509
00:33:14,220 --> 00:33:18,720
最最终下面是到底我这个扫多少数据范围是什么润值从哪到哪儿？

510
00:33:19,380 --> 00:33:24,690
所以可以看这个得到一个更详细的一个执行计划是怎么什么样子？但是

511
00:33:25,080 --> 00:33:27,420
呃OK，后面后面我们又

512
00:33:27,540 --> 00:33:29,520
呃，扩展这个语法

513
00:33:29,850 --> 00:33:35,160
客人有一半就是我们从那个破4 YY4口去学到一次，拍完那个车呢？

514
00:33:35,165 --> 00:33:38,670
跟APP的区别是什么呢？就是上面这个会实际上

515
00:33:38,790 --> 00:33:40,290
他是把这个

516
00:33:40,350 --> 00:33:43,380
的搜索具体要怎么执行告诉我们？

517
00:33:43,830 --> 00:33:47,820
但是下面这个搜索有实际上告诉我们的是这个QQ到底是

518
00:33:48,000 --> 00:33:50,490
呃，实际执行起来是什么样子的？

519
00:33:51,300 --> 00:33:52,410
而不是一个他

520
00:33:52,620 --> 00:33:56,640
将来我说是怎么执行？也就是说它是一个执行后结果的一个统计

521
00:33:57,780 --> 00:34:03,090
我们看这个例子这个例子里面就是翻翻翻到外侧的一个这样搜狗这个搜狗实像是

522
00:34:03,095 --> 00:34:04,410
这一次的一个死扣

523
00:34:04,950 --> 00:34:08,670
然后呢，左边同样它是包含了这个锁扣的这个

524
00:34:08,820 --> 00:34:11,910
每个算子之间一个逻辑关系一个

525
00:34:12,300 --> 00:34:13,170
很脆

526
00:34:13,440 --> 00:34:18,750
然后右边的实际上他出，当然这也是一个截图啊，就是说

527
00:34:18,755 --> 00:34:20,490
其他也是包含这几个月的

528
00:34:20,640 --> 00:34:24,570
但是他说自己的这位他额外多了一个人就是有这种衣服

529
00:34:25,350 --> 00:34:30,660
然后他是告诉大家就是每个算子具体的执行时间是多少，实际直接是研制不是一

530
00:34:30,960 --> 00:34:33,660
不记得什么之类的，然后是具体的这个

531
00:34:33,810 --> 00:34:35,130
执行次数，然后

532
00:34:35,550 --> 00:34:37,860
具体处理多多少个多少行数据

533
00:34:37,920 --> 00:34:39,060
都在这里显示

534
00:34:39,690 --> 00:34:41,220
所以说，如果说

535
00:34:41,370 --> 00:34:42,480
呃

536
00:34:43,230 --> 00:34:44,400
我们的这个

537
00:34:44,640 --> 00:34:46,920
呃，社会条件允许的话

538
00:34:47,280 --> 00:34:50,550
等你一起来那一次就要什么品牌的一次

539
00:34:50,940 --> 00:34:56,250
但是如果说这个搜索有执行的时间太长，或者说的这个搜狗如果真执行下去的话，就是

540
00:34:56,550 --> 00:34:57,990
它会发生什么异常？

541
00:34:58,260 --> 00:35:01,890
只能使用了一次破案，那我们还是用原来的一次破案还是？

542
00:35:02,040 --> 00:35:03,450
还查看这个

543
00:35:03,480 --> 00:35:05,460
思考本身是不是有什么问题？

544
00:35:08,040 --> 00:35:12,060
下面这个工具是吹散，这是我们这个一个新功能

545
00:35:12,540 --> 00:35:15,840
呃，他用法也很简单，其实跟ST比较a4

546
00:35:16,020 --> 00:35:21,330
也是不爱呢，是这个我直接这么一个破烂，然后再加我们三三个花儿也是他那样的加我

547
00:35:21,810 --> 00:35:22,770
所以现在是

548
00:35:22,920 --> 00:35:25,140
用锤子敲敲门叫我们的借口

549
00:35:25,590 --> 00:35:30,180
然后他就自身大家都知道在这个状态报端口，原来的八零

550
00:35:30,420 --> 00:35:35,550
一般端口打开之后，这个外部说实际上是可以这个有一个通话界面

551
00:35:35,940 --> 00:35:41,250
这个界面是怎么用的？是一样，就是我们把这个垂死的这个结果可以拷贝出来

552
00:35:41,700 --> 00:35:42,390
然后

553
00:35:42,510 --> 00:35:43,860
然后再打开这个

554
00:35:44,010 --> 00:35:47,370
和外部界面，然后就是我们可以把这个角色结果放进去

555
00:35:48,210 --> 00:35:53,010
这里得到的一个是，其实就是图形化展示，他会告诉你这这个思考

556
00:35:53,340 --> 00:35:58,650
就不像上面一次次不愿意那样了他一次饭本身是一种就是恶意算

557
00:35:58,655 --> 00:36:00,420
为力度进行统计的

558
00:36:00,660 --> 00:36:05,970
但是这个吹吹他是以这种函数为绿色经营统计的，她会统计每个函数世界执行时间

559
00:36:07,050 --> 00:36:12,360
然后包括其实这个也可以看到这个这个这个这个这个这个函数里边，但是

560
00:36:12,365 --> 00:36:14,490
这个包含前面是几个函数的

561
00:36:16,260 --> 00:36:19,230
然后每个函数执行生都会比较相信的的上面

562
00:36:19,260 --> 00:36:21,780
这是一个相对比较高级的功能吧！

563
00:36:24,870 --> 00:36:28,140
现实是厄咱们收16就是说啊！

564
00:36:28,770 --> 00:36:34,080
有很多用户给我们抱怨，就是说，比如我们这个搜宽容还是不太好查，所以后来我们就做

565
00:36:34,085 --> 00:36:38,670
这个工具这些要是一个不是茶的日志，有什么问题的工具，而是

566
00:36:38,880 --> 00:36:41,790
一个茶有哪些班人制的一个工具

567
00:36:42,420 --> 00:36:45,030
比如说我们可以用这这样一条搜狗去吧

568
00:36:45,060 --> 00:36:50,370
就是最近七天七天里边最多的五个500条的这个日志给打出来

569
00:36:50,700 --> 00:36:56,010
万人知道那边儿微信的事就是在最近的十条，然后当然也可以很好明明如果他不是

570
00:36:56,015 --> 00:36:57,720
这个话就是最多这个

571
00:36:57,960 --> 00:37:00,630
呃，会套30就是最慢的这个

572
00:37:00,780 --> 00:37:03,150
文字是多少分的那些？

573
00:37:03,450 --> 00:37:04,830
做一个详细的列表

574
00:37:07,200 --> 00:37:12,360
呃，第三部分我介绍一下，就是说性能调优的这些一些参数是

575
00:37:12,690 --> 00:37:17,880
怎么调优的？然后其实分为了两部分，一个是配置，30部分，一个是这种变量部分

576
00:37:19,410 --> 00:37:24,720
33岁的呢，不多，然后这些都是存在的，这个泰迪b的是配置文件这种的

577
00:37:25,050 --> 00:37:30,360
然后系统参数就是这个，我们通过搜索可以在线进行调整的，我可以用伺候赛特

578
00:37:30,365 --> 00:37:31,020
没有觉得挺

579
00:37:33,600 --> 00:37:38,910
先看第一个偷偷跟妹子偷偷撩妹子，嗯，刚才在介绍那个，可能是那个监控的时候

580
00:37:38,915 --> 00:37:39,930
有介绍过

581
00:37:40,140 --> 00:37:45,000
其他过这个地方就是说同学们的实践实现这个正在工作的这个30的

582
00:37:45,300 --> 00:37:46,830
他他默认只是1000

583
00:37:47,040 --> 00:37:51,840
并发出超过这个值的时候呢，实际上就会发生等待的现象，就是说如果说

584
00:37:52,050 --> 00:37:54,420
呃，当时我可能同时能创建，比如说

585
00:37:54,810 --> 00:37:57,870
超过1000个这个这个连接，但是呢？

586
00:37:57,990 --> 00:38:02,220
真正在执行拓客的这个连接只有这个1000个

587
00:38:03,090 --> 00:38:06,630
对于这个OL IP ing，其实他也有很好的这个防误触做坐

588
00:38:08,010 --> 00:38:13,320
层层有一用户，就是他在设计一个OL tp的一个场景的时候，她在自己用

589
00:38:13,325 --> 00:38:14,580
很可能就是

590
00:38:14,610 --> 00:38:17,010
并没有设置很好的这种防误触的作用

591
00:38:17,015 --> 00:38:22,320
然后他的那个呃报表生成那个按钮，他可以连续点击，然后每次见你都会生成一个很

592
00:38:22,650 --> 00:38:25,590
打死了狗这个复杂的狗就会发到水库这端

593
00:38:26,160 --> 00:38:27,210
然后因为

594
00:38:27,240 --> 00:38:32,310
大家都这样，这种APP用的这种，这个我其实反悔的时间是比较长的，然后他可能

595
00:38:33,330 --> 00:38:38,640
用户使用的时候并没有这个意识，又不知道这个案例上，这个按钮会大概什么影响也不

596
00:38:38,645 --> 00:38:40,620
这个搜索什么时候会返回？

597
00:38:40,770 --> 00:38:41,640
他会

598
00:38:41,730 --> 00:38:45,390
反复点击，然后之后就会把数据库那边儿造成比较大压力

599
00:38:45,660 --> 00:38:47,040
我这时候其实我们

600
00:38:47,130 --> 00:38:51,810
做一个反向的优化，然后就是相当于把这个这个参数调整为一

601
00:38:51,930 --> 00:38:54,420
然后让同时执行的搜索有只有一个

602
00:38:55,020 --> 00:38:58,620
这样就是即使对方再怎么连续点击其实？

603
00:38:59,640 --> 00:39:01,470
执行这个思考的这个这个

604
00:39:01,530 --> 00:39:03,090
连接其实只有一个眼睛

605
00:39:06,000 --> 00:39:11,310
额，第二个30分就是在他这一配置有一个麦克福尔克斯曼斯曼斯的时间，他现在

606
00:39:11,315 --> 00:39:14,850
现这个所谓最多的，这个是最多使用的彩票的合数

607
00:39:15,720 --> 00:39:16,680
呃

608
00:39:17,250 --> 00:39:21,840
这个其实本身其实就单独使用的话，可能感觉用处不是特别大，但是

609
00:39:21,845 --> 00:39:27,150
如果说我们就用它来配合这个他333333的是另一个命令，然后可以

610
00:39:27,155 --> 00:39:31,770
充分利用，比如说像比较新的那种优化价格的这种物理机的这个物理资

611
00:39:32,490 --> 00:39:35,070
下图就是我们这个一个实验，就是我们

612
00:39:35,790 --> 00:39:41,100
在团员一个这个手机上，这个微机室有两个立马CPU的，然后呢每个地方

613
00:39:41,105 --> 00:39:42,510
特别大概有20盒

614
00:39:42,870 --> 00:39:46,140
然后我们启动两台AB，然后同时给他们这个

615
00:39:46,950 --> 00:39:52,260
美国太极b500并发，然后和体重一个泰迪，并且因为太低，并且给他让他

616
00:39:52,500 --> 00:39:54,900
就买这40盒给她一千米发

617
00:39:55,290 --> 00:40:00,600
其实我们就会发现，其实这两台的均摊了这个压力，然后呢？并且他们通过

618
00:40:00,605 --> 00:40:05,910
他们的宝贝之后可以让他们这个家定房内存不会夸你有什么的接电，然后这样的

619
00:40:05,915 --> 00:40:08,400
这个整个CPU的，这个省力是最高的

620
00:40:08,730 --> 00:40:10,230
如果我们把这个

621
00:40:10,380 --> 00:40:11,220
呃

622
00:40:11,640 --> 00:40:16,920
她他就变成自由地去用40盒的话，可能就会发生一些比如说宽窄，把核心的一个问题

623
00:40:17,190 --> 00:40:21,210
然后他整个CP任务也不会特别大单那个也不用他完全打满

624
00:40:23,970 --> 00:40:29,280
下面要讲的这个对于这个苛刻的语句来讲，其实呢？

625
00:40:29,550 --> 00:40:32,820
他可以继续换成第一次x的执行计划

626
00:40:33,960 --> 00:40:34,740
然后

627
00:40:34,830 --> 00:40:38,790
呃，就是说意思我们不是看一个月之后，这时候我们可能

628
00:40:38,910 --> 00:40:41,340
在停车场的时候只会传几个参数过来

629
00:40:41,490 --> 00:40:46,500
然后呢，穿越参数过来其实我们可以通过一次跳出去，把这个参数的得到之后，然后以及

630
00:40:46,830 --> 00:40:48,750
传给我们这个嗯

631
00:40:49,050 --> 00:40:51,450
语句拿来地就会把整个语句拼出来

632
00:40:51,660 --> 00:40:53,460
但就是这样，就是其实

633
00:40:53,490 --> 00:40:55,710
不是拍了一个这个默认的一个做法嘛？

634
00:40:55,980 --> 00:40:57,960
它实际上是换成了这个蛇口

635
00:40:58,410 --> 00:41:01,560
然后这样避免了这个深刻的一个解析的过程，但是

636
00:41:01,590 --> 00:41:03,120
我们更进一步，我们

637
00:41:03,240 --> 00:41:06,660
同时，可以把第一次设置执行的执行计划和申请了

638
00:41:07,260 --> 00:41:12,570
可能就今天今晚之后，我们不仅可以把语句拼出来，当这个第二次这个车的时候也可以

639
00:41:12,575 --> 00:41:13,560
可以把这个

640
00:41:13,740 --> 00:41:18,390
图案就不用让他重新做BO的，我就怕你不知道它拿出来直接可以使

641
00:41:18,900 --> 00:41:23,880
然后对于这种比如说比较严苛，这种对性能要求比较高的哦特意场景的其实

642
00:41:24,030 --> 00:41:26,400
发现可以大概提升本质是线性的

643
00:41:26,850 --> 00:41:30,690
但是这也需要注意的是，它自身是有一个容量限制的就是

644
00:41:30,840 --> 00:41:35,880
呃，我最多可以缓存多少个？这个依据的，这个京计划

645
00:41:36,270 --> 00:41:41,400
然后她是一个三年级的便利，就是说如果说一个三升的就换成比如说100个200个

646
00:41:41,700 --> 00:41:47,010
然后你如果其中1000个塞车的话，可能整个这个需要还存在这个，真的话就会特别多

647
00:41:47,490 --> 00:41:49,260
然后所以这时候可能

648
00:41:49,410 --> 00:41:52,140
写成内存使用方面可能需要注意一下吧！

649
00:41:55,110 --> 00:41:57,810
然后下一个是这个thx JJ盖茨

650
00:41:57,960 --> 00:42:03,270
呃，这个参数时间就是在她他一个搜索有内部呢，是他事情

651
00:42:03,275 --> 00:42:05,640
对对事物的提交设计进行了排序

652
00:42:06,150 --> 00:42:10,680
然后这样有什么好处就是可以保证，如果从我这个思维发出去的肯定

653
00:42:11,430 --> 00:42:15,570
请求不会跟我这个骚扰自己的，这个可能也走进发生冲突

654
00:42:16,890 --> 00:42:20,010
然后呢，对于一些高并发，高冲突的这种场景

655
00:42:20,580 --> 00:42:25,890
这是非常有利的，但是如果说你的这个场景是要经常有这种跨

656
00:42:25,895 --> 00:42:26,940
隔壁的这种

657
00:42:27,000 --> 00:42:32,310
事物还有高冲突的话，可能他的作用就不会太明显了，但是如果说

658
00:42:32,760 --> 00:42:33,780
这个冲突

659
00:42:33,810 --> 00:42:35,100
可以把它约束在

660
00:42:35,105 --> 00:42:37,710
所有的事物都从头都发生在同学，他就避之

661
00:42:38,340 --> 00:42:43,650
这样他可以预先进行行为相当进行一次排队，然后就是如果是已经发生了这种不可避

662
00:42:43,920 --> 00:42:47,190
的话也会提前会把这个错误报给你报出来

663
00:42:48,150 --> 00:42:53,460
但是呢，它有一个限制，就是说如果是毒血的这种冲动其实还是会不开心的，因为他有病

664
00:42:53,700 --> 00:42:55,440
所有的这种艾顿的数据

665
00:42:55,770 --> 00:42:57,120
只缓存了这个

666
00:42:57,270 --> 00:42:58,560
需要写出去吗？

667
00:43:01,260 --> 00:43:03,210
这个讲的是系统变样的部分

668
00:43:03,630 --> 00:43:08,940
就变化部分呢，首先先介绍一个跟这个马赛克金融的一个一个因素是行为，这个参数

669
00:43:10,050 --> 00:43:14,430
呃，这参数就是跟我们刚才介绍的，就是说我说每次课

670
00:43:14,820 --> 00:43:16,560
ABC，马上有很多这

671
00:43:16,565 --> 00:43:20,400
不同比如其中一个就是邪恶不同，他就是做了一个月的菜

672
00:43:20,790 --> 00:43:23,850
就是在这个提交时候才检查，但是这个参数呢？

673
00:43:24,120 --> 00:43:26,490
它作用就是如果我们把它打开的话

674
00:43:26,730 --> 00:43:30,990
实际上，它是会让买他就必须买蟹扣，这个行为是完全一致的

675
00:43:32,280 --> 00:43:34,560
如果我们开启了这个这个变量的话

676
00:43:34,830 --> 00:43:35,760
他就会

677
00:43:35,850 --> 00:43:40,620
从下面这个例子一样，就是在买车口子这里报错，他也会在这里报错

678
00:43:41,220 --> 00:43:46,530
然后呢，买三个在这里提交成功，采取比也会提交成功，然后最终结果完全彩笔一致的

679
00:43:47,220 --> 00:43:48,120
但是这里

680
00:43:48,630 --> 00:43:51,360
所任何事情都是有一个这个取舍的

681
00:43:51,510 --> 00:43:56,820
不过我们开启了这个东西，它会造成什么问题呢？就是我们如果一个事物里面的鱼

682
00:43:56,825 --> 00:43:59,130
有特别多的话，我每一个比如有

683
00:43:59,670 --> 00:44:04,110
比更大，音色比更大，肯定要提前有比如说1000个2000个银色的

684
00:44:04,530 --> 00:44:08,010
哪个因素？他们每一个都要去进行这个

685
00:44:08,040 --> 00:44:11,550
检查检查是不是有唯一的这个约束的冲突？

686
00:44:12,300 --> 00:44:17,340
如果说已经发生了的话，那我就当时报错了，但是如果没有的话，我就去检查了

687
00:44:17,730 --> 00:44:23,040
所以说，很有可能整个这个事物中期间一个虫都没有，但是你做了很多人都是检查

688
00:44:23,045 --> 00:44:25,350
而没有坐在提交时做一次检查

689
00:44:25,650 --> 00:44:30,180
这样对其实对这种这种事物的话，对性能影响是比较大的

690
00:44:31,530 --> 00:44:35,700
大多数情况下，不建议大家开启的参数什么时候适合开学就是

691
00:44:35,940 --> 00:44:36,810
如果

692
00:44:37,980 --> 00:44:41,100
再使用一些比如说像og机种同步工具的时候

693
00:44:41,670 --> 00:44:46,980
他是会需要检查这个这个结果的，他会把这个自己这个

694
00:44:46,985 --> 00:44:49,170
因为我们是一个嗯

695
00:44:49,200 --> 00:44:51,240
进入卖所有协议的一个数据库嘛？

696
00:44:51,540 --> 00:44:56,010
因为他会认为他这个就是一个卖c口认为你你需要给我买借口完全一

697
00:44:56,670 --> 00:44:57,870
所以他这时候会

698
00:44:57,960 --> 00:45:03,270
呃，在这种音色的报错时候也会期望他也必须要报错，但是这样的也并没有

699
00:45:03,840 --> 00:45:09,150
所以说，只有在使用特殊工具的时候，可能我们需要打一种参数，大多数情况其实都不虚

700
00:45:10,260 --> 00:45:15,120
当时然后就如果发现这个性能有问题的话，那我们还是可能需要开一下

701
00:45:16,620 --> 00:45:19,350
看这个参数是不是被被错误的打开了？

702
00:45:20,760 --> 00:45:24,390
下面讲一下这个恶第四个我是干部科22

703
00:45:24,900 --> 00:45:29,430
这个参数呢？实际上是控制的，她就是向她可以发的这个散文数据一个病

704
00:45:30,120 --> 00:45:35,430
然后呢，就是默认值就是它默认的要向多少个锐疹发生发出一个并发的这个请求

705
00:45:35,910 --> 00:45:40,740
这个参数实际上是一个去就是作用范围比较大的，他现在对于数据和锁

706
00:45:42,600 --> 00:45:47,910
然后其他这些参数呢，就是我捅一遍，到这里他们都是对于这个单独算子进行

707
00:45:47,915 --> 00:45:49,230
轻一些

708
00:45:49,290 --> 00:45:52,110
呃，小范围的一个调优的参数，比如说第一个

709
00:45:52,350 --> 00:45:56,610
呃，还是一句话少嗯嗯，根本的就是含蓄聚合的一个辩论术

710
00:45:56,820 --> 00:45:58,800
然后还是这样的一个变化术

711
00:45:59,100 --> 00:46:04,410
然后下面这是因为斯科特尔和这个那次照照样的这个拜师塞死

712
00:46:05,370 --> 00:46:10,680
实际上，它控制就是应该从看呗，就是我们这个在搜狗找到的一个病发的时候，和每次拜

713
00:46:11,370 --> 00:46:16,680
然后下面是殷代速度快，比赛还有殷代速度出来的科学一次，就是因为杜卡普是我们那

714
00:46:17,160 --> 00:46:19,680
就是先读，所以在读书句这个

715
00:46:19,800 --> 00:46:24,870
可能大大伯瑞的这种过程，我们或者叫回表中过程的一个变化，是不是和这个白色的三？

716
00:46:25,740 --> 00:46:31,050
啊，最后一个参数，它是一个布尔值，它是一个就相当于控制到底是把这个查询

717
00:46:31,260 --> 00:46:34,920
展开围绕啊，还是把这个自杀勋就释放

718
00:46:35,220 --> 00:46:38,310
地理的杂志就按照这个印你自己的事还有

719
00:46:38,400 --> 00:46:40,440
自己执行完了之后再拿出来用

720
00:46:41,400 --> 00:46:42,450
一个开关

721
00:46:42,840 --> 00:46:48,150
在这个若硬的这个杂志的执行表快是不是比较小的时候是这样？是把他在

722
00:46:48,450 --> 00:46:53,250
但是应该应该比较好的，就是让他做一个自然性感，要不然这个执行就行

723
00:46:53,550 --> 00:46:58,860
如果说他给这个印尼自由行结果及表带，然后直线可能比较长，能把它拿

724
00:46:58,865 --> 00:47:01,410
他出来坐坐啊，真的是一个更好的选择

725
00:47:04,170 --> 00:47:09,480
啊，下面就是我们这个打印安排就是可能希望大家登陆这个真开不得玩笑，我们先打印

726
00:47:10,830 --> 00:47:13,080
呃，我今天就讲了，就是这谢谢大家

727
00:47:17,790 --> 00:47:18,390
我不知道

